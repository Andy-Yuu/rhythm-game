{"version":3,"sources":["images/uarr.png","images/rarr.png","images/darr.png","images/larr.png","App.js","index.js"],"names":["App","ARROWS","uarr","rarr","darr","larr","useState","arrows","setArrows","position","setPosition","score","setScore","isRunning","setIsRunning","arrowsRef","useRef","setNewArrowsState","data","current","positionRef","setNewPositionState","scoreRef","setNewscoreState","isRunningRef","setNewIsRunningState","useStopwatch","autoStart","seconds","start","pause","reset","useEffect","window","addEventListener","handleKeyDown","removeEventListener","setTimeout","undefined","event","includes","keyCode","keyToArrow","doneRow","numberOfArrows","length","newArrows","i","push","Math","floor","random","generateArrows","className","map","arrow","index","src","alt","style","height","width","marginRight","visibility","opacity","transition","transform","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAAe,G,MAAA,IAA0B,kCCA1B,MAA0B,iCCA1B,MAA0B,iCCA1B,MAA0B,iC,OC0J1BA,MAjJf,WACE,IAEMC,EAAS,CACb,GAAIC,EACJ,GAAIC,EACJ,GAAIC,EACJ,GAAIC,GAGN,EAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAgCF,mBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA0BJ,mBAAS,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAAkCN,oBAAS,GAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KAEMC,EAAYC,iBAAOT,GACnBU,EAAoB,SAACC,GACzBH,EAAUI,QAAUD,EACpBV,EAAUU,IAENE,EAAcJ,iBAAOP,GACrBY,EAAsB,SAACH,GAC3BE,EAAYD,QAAUD,EACtBR,EAAYQ,IAERI,EAAWN,iBAAOL,GAClBY,EAAmB,SAACL,GACxBI,EAASH,QAAUD,EACnBN,EAASM,IAELM,EAAeR,iBAAOH,GACtBY,EAAuB,SAACP,GAC5BM,EAAaL,QAAUD,EACvBJ,EAAaI,IAGf,EAKIQ,uBAAa,CAAEC,WAAW,IAJ5BC,EADF,EACEA,QACAC,EAFF,EAEEA,MACAC,EAHF,EAGEA,MACAC,EAJF,EAIEA,MAGFC,qBAAU,WAER,OADAC,OAAOC,iBAAiB,UAAWC,GAC5B,WACLF,OAAOG,oBAAoB,UAAWD,MAEvC,IAEHH,qBAAU,WACJJ,GAlDO,KAmDTE,IACAL,GAAqB,GACrBY,YAAW,WACTpB,EAAkB,IAClBI,EAAoB,GACpBE,EAAiB,GACjBQ,OAAMO,GAAW,KAChB,QAEJ,CAACV,IAEJ,IAQMO,EAAgB,SAACI,GAKrB,GAAK,CAAC,GAAI,GAAI,GAAI,IAAIC,SAASD,EAAME,SAArC,CACA,IAAMC,EAAazC,EAAOsC,EAAME,SAC1BE,EAAoCC,IAAzBxB,EAAYD,SAAoCJ,EAAUI,QAAQC,EAAYD,WAAauB,EAC5G,GAAiC,IAA7B3B,EAAUI,QAAQ0B,QAAgBF,EAapC,OAXKnB,EAAaL,SAAwC,IAA7BJ,EAAUI,QAAQ0B,SAE7ChB,IACAJ,GAAqB,IAEnBD,EAAaL,SAAWwB,IAE1BtB,EAAoB,GACpBE,EAAiBD,EAASH,QAAU,UA1BnB,WAErB,IADA,IAAM2B,EAAY,GACTC,EAAI,EAAGA,EA/DK,GA+DgBA,IACnCD,EAAUE,KAAK/C,EAAOgD,KAAKC,MAAM,EAAAD,KAAKE,SAA2B,MAEnElC,EAAkB6B,GAuBhBM,GAGE5B,EAAaL,SAAWJ,EAAUI,QAAQC,EAAYD,WAAauB,EAErErB,EAAoBD,EAAYD,QAAU,GAE1CE,EAAoB,KAIxB,OACE,sBAAKgC,UAAU,MAAf,UACE,8BACqB,IAAlB9C,EAAOsC,OACN,gEAIA,qCACE,0CAAalC,KACb,yCA/GG,GA+GgBiB,UAIzB,qBAAKyB,UAAU,YAAf,SACIxC,GAA+B,IAAlBN,EAAOsC,OAKlBtC,EAAO+C,KAAI,SAACC,EAAOC,GAAR,OACT,qBAEEC,IAAKF,EACLG,IAAI,QACJC,MAAO,CACLC,OAAQ,OACRC,MAAO,QACPC,YAAa,OACbC,WAAYtD,EAAW+C,EAAQ,SAAW,GAC1CQ,QAASvD,EAAW+C,EAAQ,EAAI,GAChCS,WAAYxD,EAAW+C,EAAQ,6DAA+D,GAC9FU,UAAWzD,EAAW+C,EAAQ,aAAe,KAV1CA,MANT,mDC1HZW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.dc3a3bb5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/uarr.fc55bcc9.png\";","export default __webpack_public_path__ + \"static/media/rarr.f640fccd.png\";","export default __webpack_public_path__ + \"static/media/darr.753812ca.png\";","export default __webpack_public_path__ + \"static/media/larr.dc2db8f9.png\";","import { useState, useEffect, useRef } from 'react';\r\nimport { useStopwatch } from 'react-timer-hook';\r\nimport './App.css';\r\nimport uarr from './images/uarr.png';\r\nimport rarr from './images/rarr.png';\r\nimport darr from './images/darr.png';\r\nimport larr from './images/larr.png';\r\n\r\n\r\nfunction App() {\r\n  const TIME = 30;\r\n  const numberOfArrows = 10;\r\n  const ARROWS = {\r\n    38: uarr, \r\n    39: rarr, \r\n    40: darr, \r\n    37: larr,\r\n  };\r\n\r\n  const [arrows, setArrows] = useState([]);\r\n  const [position, setPosition] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [isRunning, setIsRunning] = useState(false);\r\n\r\n  const arrowsRef = useRef(arrows);\r\n  const setNewArrowsState = (data) => {\r\n    arrowsRef.current = data;\r\n    setArrows(data);\r\n  };\r\n  const positionRef = useRef(position);\r\n  const setNewPositionState = (data) => {\r\n    positionRef.current = data;\r\n    setPosition(data);\r\n  };\r\n  const scoreRef = useRef(score);\r\n  const setNewscoreState = (data) => {\r\n    scoreRef.current = data;\r\n    setScore(data);\r\n  };\r\n  const isRunningRef = useRef(isRunning);\r\n  const setNewIsRunningState = (data) => {\r\n    isRunningRef.current = data;\r\n    setIsRunning(data);\r\n  };\r\n\r\n  const {\r\n    seconds,\r\n    start,\r\n    pause,\r\n    reset,\r\n  } = useStopwatch({ autoStart: false });\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (seconds >= TIME) {\r\n      pause();\r\n      setNewIsRunningState(false);\r\n      setTimeout(() => {\r\n        setNewArrowsState([]);\r\n        setNewPositionState(0);\r\n        setNewscoreState(0);\r\n        reset(undefined, false);\r\n      }, 5000)\r\n    }\r\n  }, [seconds]);\r\n\r\n  const generateArrows = () => {\r\n    const newArrows = [];\r\n    for (let i = 0; i < numberOfArrows ; i++) {\r\n      newArrows.push(ARROWS[Math.floor(Math.random() * (40 - 37 + 1) + 37)]);\r\n    }\r\n    setNewArrowsState(newArrows);\r\n  }\r\n\r\n  const handleKeyDown = (event) => {\r\n    // up arrow key code: 38\r\n    // right arrow key code: 39\r\n    // down arrow key code: 40\r\n    // left arrow key code: 37\r\n    if (![38, 39, 40, 37].includes(event.keyCode)) return;\r\n    const keyToArrow = ARROWS[event.keyCode];\r\n    const doneRow = (positionRef.current === (numberOfArrows - 1) && arrowsRef.current[positionRef.current] === keyToArrow);\r\n    if (arrowsRef.current.length === 0 || doneRow) {\r\n      //either starting the game or has finished a row\r\n      if (!isRunningRef.current && arrowsRef.current.length === 0) {\r\n        //start\r\n        start();\r\n        setNewIsRunningState(true);\r\n      }\r\n      if (isRunningRef.current && doneRow) {\r\n        //done row\r\n        setNewPositionState(0);\r\n        setNewscoreState(scoreRef.current + 10);\r\n      }\r\n      generateArrows();\r\n      return;\r\n    }\r\n    if (isRunningRef.current && arrowsRef.current[positionRef.current] === keyToArrow) {\r\n      //match \r\n      setNewPositionState(positionRef.current + 1);\r\n    } else {\r\n      setNewPositionState(0);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div>\r\n        {arrows.length === 0 ? (\r\n          <div>\r\n            Press any arrow key to start!\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <div>Score: {score}</div>\r\n            <div>Time: {TIME - seconds}</div>\r\n          </>\r\n        )}\r\n      </div>\r\n      <div className=\"Container\">\r\n        {!isRunning && arrows.length !== 0 ? (\r\n            <div>\r\n              Game over!\r\n            </div>\r\n          ) : (\r\n            arrows.map((arrow, index) => (\r\n              <img \r\n                key={index}\r\n                src={arrow}\r\n                alt=\"arrow\"\r\n                style={{\r\n                  height: 'auto', \r\n                  width: '100px', \r\n                  marginRight: '10px', \r\n                  visibility: position > index ? 'hidden' : '', \r\n                  opacity: position > index ? 0 : '', \r\n                  transition: position > index ? 'transform 0.25s, visibility 0s 0.25s, opacity 0.25s linear' : '',\r\n                  transform: position > index ? 'scale(1.5)' : ''\r\n                }} \r\n              />\r\n            ))\r\n          )\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}